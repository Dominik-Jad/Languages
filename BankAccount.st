Object subclass: #Account	instanceVariableNames: 'balance interestRate'	classVariableNames: ''	poolDictionaries: ''	category: 'BankAccount'!!Account methodsFor: 'as yet unclassified' stamp: 'Anonymous 12/30/2019 21:37'!checkRate^interestRate! !!Account methodsFor: 'as yet unclassified' stamp: 'Anonymous 12/30/2019 21:36'!checkBalance^balance.! !!Account methodsFor: 'as yet unclassified' stamp: 'Anonymous 12/30/2019 21:51'!balanceAfter: years	^ balance * ((1 + interestRate) raisedTo: years).! !!Account methodsFor: 'as yet unclassified' stamp: 'Anonymous 1/7/2020 18:59'!yearsUntil: amount	| year balanceNew|	year := 0.	balanceNew := balance. 	[ amount > balanceNew  ] whileTrue:		[ 			balanceNew := self balanceAfter: year.				year := year + 1.		 ].	^year - 1! !!Account methodsFor: 'as yet unclassified' stamp: 'Anonymous 1/7/2020 18:55'!debit: amount  	amount positive ifTrue: [(balance - amount) positive ifTrue: [balance:= balance - amount] ]. 	! !!Account methodsFor: 'as yet unclassified' stamp: 'Anonymous 1/7/2020 18:55'!credit: amount  	amount positive ifTrue: [balance := balance + amount]. 	! !!Account methodsFor: 'initialization' stamp: 'Anonymous 12/30/2019 21:25'!initialize 	balance := 0.! !Account subclass: #CurrentAccount	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BankAccount'!!CurrentAccount methodsFor: 'initialization' stamp: 'Anonymous 12/30/2019 21:39'!initialize 	super initialize.	interestRate := 0.005.! !Account subclass: #SavingsAccount	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BankAccount'!!SavingsAccount methodsFor: 'initialization' stamp: 'Anonymous 12/30/2019 21:39'!initialize 	super initialize.	interestRate := 0.015.! !